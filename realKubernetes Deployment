#install rabbitmq
kubectl apply -f "https://github.com/rabbitmq/cluster-operator/releases/latest/download/cluster-operator.yml"
kubectl krew install rabbitmq

#enable Local Path Provisioner (NOT for production environment), see https://www.rabbitmq.com/kubernetes/operator/quickstart-operator.html
kubectl apply -f https://raw.githubusercontent.com/rancher/local-path-provisioner/master/deploy/local-path-storage.yaml
kubectl annotate storageclass local-path storageclass.kubernetes.io/is-default-class=true

#enable a lot of image pull (after login to Dockerhub)
kubectl create secret generic regcred     --from-file=.dockerconfigjson=/home/c00251686/.docker/config.json     --type=kubernetes.io/dockerconfigjson -n core
kubectl create secret generic regcred     --from-file=.dockerconfigjson=/home/c00251686/.docker/config.json     --type=kubernetes.io/dockerconfigjson -n web


FROM:https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/


#restart nfs (on VM3)
sudo systemctl restart nfs-kernel-server
#(if not set up, follow:
https://www.digitalocean.com/community/tutorials/how-to-set-up-an-nfs-mount-on-ubuntu-20-04
to host /sharedir on VM3, and mount /sharedir of VM2 to VM3
# to create shared dir

===
kubectl apply -f deployment/Components/Core.yaml
